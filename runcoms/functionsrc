function syntunnel () {
    TUNPID=$(ps -ef | grep 24800 | grep -v grep | awk '{ printf $2 }')
    if [ ! -z $TUNPID ]; then
        kill $TUNPID
    fi
    
    SYNPID=$(ps -ef | grep synergyc | grep -v grep | awk '{ printf $2 }')
    if [ ! -z $SYNPID ]; then
        killall synergyc
    fi

    ssh -f -N -L localhost:24800:"$1":24800 "$1"
    synergyc localhost
}

function callup()
{
    if [ -e $2 ]; then
        ldapsearch -h auth.edir.rackspace.com -x -b "OU=users,O=rackspace" "(cn=$1)"
    else
        ldapsearch -h auth.edir.rackspace.com -x -b "OU=users,O=rackspace" "($1=$2)"
    fi
}

function groupsearch()
{
    ldapsearch -h auth.edir.rackspace.com -x -b "ou=POSIXGroups,o=rackspace" "(cn=$1)" | grep unique
}

function fail()
{
    echo -e "
 ▄██████████████▄▐█▄▄▄▄█▌
 ██████▌▄▌▄▐▐▌███▌▀▀██▀▀
 ████▄█▌▄▌▄▐▐▌▀███▄▄█▌
 ▄▄▄▄▄██████████████▀ "
}

function getinttoken()
{
    ENDPOINT=https://identity-internal.api.rackspacecloud.com
    RACKER_SSO_USERNAME='eric6133'
    echo 'Enter Racker SSO Password: '
    read -s RACKER_SSO_PASSWORD
    RTK=$(curl -s -X POST $ENDPOINT/v2.0/tokens -d "{\"auth\":{\"RAX-AUTH:domain\": {\"name\": \"Rackspace\"},\"passwordCredentials\":{\"username\":\"$RACKER_SSO_USERNAME\",\"password\":\"$RACKER_SSO_PASSWORD\"}}}" -H "Content-type: application/json" | jq -r '.access.token.id')
    echo $RTK
}

function getstginttoken()
{
    ENDPOINT=https://staging.identity-internal.api.rackspacecloud.com
    RACKER_SSO_USERNAME='eric6133'
    echo 'Enter Racker SSO Password: '
    read -s RACKER_SSO_PASSWORD
    RTK=$(curl -s -X POST $ENDPOINT/v2.0/tokens -d "{\"auth\":{\"RAX-AUTH:domain\": {\"name\": \"Rackspace\"},\"passwordCredentials\":{\"username\":\"$RACKER_SSO_USERNAME\",\"password\":\"$RACKER_SSO_PASSWORD\"}}}" -H "Content-type: application/json" | jq -r '.access.token.id')
    echo $RTK
}

function cleaniterm()
{
    sudo rm /private/var/log/asl/*.asl
}

function xrwork()
{
    #xrandr --output eDP1 --mode 1366x768 --output DP1-2 --mode 1680x1050 --above eDP1 --output DP1-1 --mode 1680x1050 --left-of DP1-2
    sh $HOME/.screenlayout/work.sh
    sh $HOME/.screenlayout/work.sh
    sh $HOME/.screenlayout/work.sh
    feh --randomize --bg-fill $HOME/.config/awesome/themes/backgrounds
}

function xrhome()
{
    #xrandr --output eDP1 --auto --output HDMI1 --mode 1360x768 --right-of eDP1
    sh $HOME/.screenlayout/home.sh
    sh $HOME/.screenlayout/home.sh
    sh $HOME/.screenlayout/home.sh
    feh --randomize --bg-fill $HOME/.config/awesome/themes/backgrounds
}

function xrlocal()
{
    #xrandr --auto
    sh $HOME/.screenlayout/local.sh
}


